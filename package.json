{
    "name": "babylon-mmd",
    "version": "0.46.0",
    "description": "babylon mmd runtime",
    "main": "esm/index.js",
    "scripts": {
        "download-ammojs-wasm": "download --out src/Runtime/Physics/External https://raw.githubusercontent.com/kripken/ammo.js/1ed8b58c7058a5f697f2642ceef8ee20fdd55e10/builds/ammo.wasm.js && download --out src/Runtime/Physics/External https://github.com/kripken/ammo.js/raw/1ed8b58c7058a5f697f2642ceef8ee20fdd55e10/builds/ammo.wasm.wasm",
        "download-ammojs-dts": "download --out src/Runtime/Physics/External --filename ammo.wasm.d.ts https://raw.githubusercontent.com/giniedp/ammojs-typed/05408a318256ca561720aad1cfd0e83e772f06cb/ammo/ammo.d.ts",
        "patch-ammojs-wasm": "cd src/Runtime/Physics/External && git init && git apply ammo-bundler.patch && rimraf .git && cd ../../../../",
        "postinstall": "npm run download-ammojs-wasm && npm run download-ammojs-dts && npm run patch-ammojs-wasm",
        
        "start": "cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128,+atomics,+bulk-memory,+mutable-globals\" webpack serve --env development",
        "watch": "cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128,+atomics,+bulk-memory,+mutable-globals\" webpack --watch",
        "build": "cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128,+atomics,+bulk-memory,+mutable-globals\" webpack --env production",
        
        "build-wasm-sr": "cd src/Runtime/Optimized/wasm_src && rimraf ../wasm/sr && cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128\"                                        wasm-pack build --target web --release --out-dir ../wasm/sr --out-name index -- --no-default-features && cd ../../../..",
        "build-wasm-sd": "cd src/Runtime/Optimized/wasm_src && rimraf ../wasm/sd && cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128\"                                        wasm-pack build --target web --debug   --out-dir ../wasm/sd --out-name index -- --no-default-features --features \"console_error_panic_hook\" && cd ../../../..",
        "build-wasm-mr": "cd src/Runtime/Optimized/wasm_src && rimraf ../wasm/mr && cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128,+atomics,+bulk-memory,+mutable-globals\" wasm-pack build --target web --release --out-dir ../wasm/mr --out-name index -- --no-default-features --features \"parallel\" && cd ../../../..",
        "build-wasm-md": "cd src/Runtime/Optimized/wasm_src && rimraf ../wasm/md && cross-env RUSTFLAGS=\"-Ctarget-feature=+simd128,+atomics,+bulk-memory,+mutable-globals\" wasm-pack build --target web --debug   --out-dir ../wasm/md --out-name index -- --no-default-features --features \"console_error_panic_hook parallel\" && cd ../../../..",
        "build-wasm-all": "npm run build-wasm-sr && npm run build-wasm-sd && npm run build-wasm-mr && npm run build-wasm-md",
        
        "build-esm": "tspc --project tsconfig.lib.json && copyfiles -u 3 src/Runtime/Optimized/wasm/** dist/esm/Runtime/Optimized/ && copyfiles -u 4 src/Runtime/Physics/External/ammo.wasm.* dist/esm/Runtime/Physics/External",
        "build-umd": "webpack --env production --config webpack.lib.config.ts && webpack --env development --config webpack.lib.config.ts",
        
        "build-lib": "rimraf dist && npm run build-wasm-all && npm run build-esm && npm run build-umd",
        
        "publish-lib": "ts-node publishScript.ts && npm publish ./dist",
        
        "lint": "eslint --ext .ts,.tsx . --fix --cache"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/noname0310/babylon-mmd.git"
    },
    "author": "noname0310",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/noname0310/babylon-mmd/issues"
    },
    "homepage": "https://github.com/noname0310/babylon-mmd#readme",
    "devDependencies": {
        "@babylonjs/havok": "^1.3.5",
        "@babylonjs/inspector": "^7.10.0",
        "@babylonjs/loaders": "^7.10.0",
        "@babylonjs/materials": "^7.10.0",
        "@typescript-eslint/eslint-plugin": "^7.12.0",
        "@typescript-eslint/parser": "^7.12.0",
        "@wasm-tool/wasm-pack-plugin": "^1.7.0",
        "ammojs-typed": "^1.0.6",
        "compression-webpack-plugin": "^11.1.0",
        "copy-webpack-plugin": "^12.0.2",
        "copyfiles": "^2.4.1",
        "cross-env": "^7.0.3",
        "download-cli": "^1.1.1",
        "eslint": "^8.57.0",
        "eslint-plugin-simple-import-sort": "^12.1.0",
        "eslint-webpack-plugin": "^4.2.0",
        "file-loader": "^6.2.0",
        "html-loader": "^5.0.0",
        "html-webpack-plugin": "^5.6.0",
        "rimraf": "^5.0.7",
        "ts-loader": "^9.5.1",
        "ts-node": "^10.9.2",
        "ts-patch": "^3.2.0",
        "typescript": "^5.4.5",
        "typescript-glslminify-transformer": "^0.0.2",
        "typescript-transform-paths": "^3.4.7",
        "wasm-pack": "^0.12.1",
        "webpack": "^5.91.0",
        "webpack-cli": "^5.1.4",
        "webpack-dev-server": "^5.0.4"
    },
    "keywords": [
        "3D",
        "javascript",
        "html5",
        "webgl",
        "babylon.js",
        "mmd"
    ],
    "sideEffects": [
        "**/mmdOutlineRenderer.*",
        "**/pmdLoader.*",
        "**/pmxLoader.*",
        "**/bpmxLoader.*",
        "**/mmdCompositeRuntimeCameraAnimation.*",
        "**/mmdCompositeRuntimeModelAnimation.*",
        "**/mmdRuntimeCameraAnimation.*",
        "**/mmdRuntimeCameraAnimationGroup.*",
        "**/mmdRuntimeModelAnimation.*",
        "**/mmdRuntimeModelAnimationGroup.*",
        "**/mmdWasmRuntimeModelAnimation.*",
        "**/index.*"
    ],
    "peerDependencies": {
        "@babylonjs/core": "^7.10.0"
    }
}
